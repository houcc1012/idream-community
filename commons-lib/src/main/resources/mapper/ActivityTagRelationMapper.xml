<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idream.commons.lib.mapper.ActivityTagRelationMapper">
    <resultMap id="BaseResultMap" type="com.idream.commons.lib.model.ActivityTagRelation">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="activity_id" property="activityId" jdbcType="INTEGER"/>
        <result column="tag_id" property="tagId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, activity_id, tag_id, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from activity_tag_relation
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from activity_tag_relation
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.idream.commons.lib.model.ActivityTagRelation" useGeneratedKeys="true"
            keyProperty="id">
        insert into activity_tag_relation (activity_id, tag_id, create_time,
        update_time)
        values (#{activityId,jdbcType=INTEGER}, #{tagId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.idream.commons.lib.model.ActivityTagRelation"
            useGeneratedKeys="true" keyProperty="id">
        insert into activity_tag_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                activity_id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                #{activityId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.idream.commons.lib.model.ActivityTagRelation">
        update activity_tag_relation
        <set>
            <if test="activityId != null">
                activity_id = #{activityId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.idream.commons.lib.model.ActivityTagRelation">
        update activity_tag_relation
        set activity_id = #{activityId,jdbcType=INTEGER},
        tag_id = #{tagId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--根据主键查询-->
    <select id="getActivityTagRelationByPrimaryKey" parameterType="java.lang.Integer"
            resultType="com.idream.commons.lib.model.ActivityTagRelation">
        SELECT id FROM activity_tag_relation WHERE id=#{id}
    </select>
    <!--新增-->
    <insert id="addActivityTagRelation" parameterType="com.idream.commons.lib.model.ActivityTagRelation"
            statementType="PREPARED" useGeneratedKeys="true" keyProperty="id">
        insert into activity_tag_relation(
        activity_id,
        tag_id,
        create_time,
        update_time) values(
        #{activityId},
        #{tagId},
        #{createTime},
        #{updateTime}
        )
    </insert>
    <!--修改-->
    <update id="updateActivityTagRelation" parameterType="com.idream.commons.lib.model.ActivityTagRelation"
            statementType="PREPARED">
        update activity_tag_relation set
        activity_id = #{activityId},
        tag_id = #{tagId},
        create_time = #{createTme},
        update_time = #{updateTime}
        where id = #{id}
    </update>
    <!--删除-->
    <delete id="deleteActivityTagRelation" parameterType="com.idream.commons.lib.model.ActivityTagRelation"
            statementType="PREPARED">
        delete from activity_tag_relation where id = #{id}
    </delete>
    <!--根据活动id删除-->
    <delete id="deleteActivityTagRelationByActivityId" parameterType="Integer" statementType="PREPARED">
        delete from activity_tag_relation where activity_id = #{activityId}
    </delete>
    <select id="listActivityTagIds" parameterType="int" resultType="int">
        select tag_id from activity_tag_relation where activity_id=#{activityId}
    </select>


    <!-- 参加活动保存标签 -->
    <select id="selectUserActivityTag" resultType="com.idream.commons.lib.dto.activity.UserActivityTag" >
  SELECT b.id tagId, b.label tagName
  FROM activity_tag_relation a INNER JOIN activity_tag b on a.tag_id = b.id
  WHERE a.activity_id = #{activityId} AND b.id NOT IN
  ( SELECT tag_id FROM user_tag_relation where user_id = #{userId} and category = 1 )
    </select>

</mapper>