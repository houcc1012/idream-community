<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idream.commons.lib.mapper.OpenCityMapper">
    <resultMap id="BaseResultMap" type="com.idream.commons.lib.model.OpenCity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="city_code" property="cityCode" jdbcType="VARCHAR"/>
        <result column="city_name" property="cityName" jdbcType="VARCHAR"/>
        <result column="sorted" property="sorted" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, city_code, city_name, sorted, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from open_city
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from open_city
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.idream.commons.lib.model.OpenCity" useGeneratedKeys="true" keyProperty="id">
        insert into open_city (city_code, city_name, sorted,
        create_time, update_time)
        values (#{cityCode,jdbcType=VARCHAR}, #{cityName,jdbcType=VARCHAR}, #{sorted,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.idream.commons.lib.model.OpenCity" useGeneratedKeys="true"
            keyProperty="id">
        insert into open_city
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cityCode != null">
                city_code,
            </if>
            <if test="cityName != null">
                city_name,
            </if>
            <if test="sorted != null">
                sorted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cityCode != null">
                #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="cityName != null">
                #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="sorted != null">
                #{sorted,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.idream.commons.lib.model.OpenCity">
        update open_city
        <set>
            <if test="cityCode != null">
                city_code = #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="cityName != null">
                city_name = #{cityName,jdbcType=VARCHAR},
            </if>
            <if test="sorted != null">
                sorted = #{sorted,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.idream.commons.lib.model.OpenCity">
        update open_city
        set city_code = #{cityCode,jdbcType=VARCHAR},
        city_name = #{cityName,jdbcType=VARCHAR},
        sorted = #{sorted,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="listOpenCity" resultType="com.idream.commons.lib.dto.activity.AppCityDto">
        SELECT
        city_code,
        city_name
        FROM
        open_city
        ORDER BY
        sorted DESC
    </select>
    <insert id="insertRefresh">
        INSERT INTO open_city (
        city_code,
        city_name,
        sorted,
        create_time,
        update_time
        ) SELECT
        c.city_code,
        c.city city_name,
        COUNT(*) sorted,
        NOW() create_time,
        NOW() update_time
        FROM
        region_group_info c
        where c.category=1
        GROUP BY
        c.city_code
    </insert>
    <delete id="deleteAll">
        delete from open_city
    </delete>
    <select id="selectOpenCity" resultType="com.idream.commons.lib.dto.user.AdminOpenCityDto">
        SELECT
        city_code,
        city_name
        FROM
        open_city ORDER BY city_code asc
    </select>
    <select id="selectMiniOpenCity" resultType="com.idream.commons.lib.dto.user.MiniProgramOpenCityDto">
        SELECT
        a.city_code,
        a.city_name,
        CASE
        WHEN num IS NULL THEN
        0
        ELSE
        1
        END AS bandActivity
        FROM
        open_city a
        LEFT JOIN (
        SELECT
        count(*) AS num,
        city_code
        FROM
        activity_info
        WHERE
        STATUS = 4
        GROUP BY
        city_code
        ) b ON a.city_code = b.city_code ORDER BY bandActivity desc,city_code asc
    </select>
    <delete id="deleteOpenCityByCityCode" parameterType="java.lang.String">
        delete from open_city
        where city_code = #{cityCode}
    </delete>
    <select id="selectOpenByCityCode" resultType="com.idream.commons.lib.dto.user.AdminOpenCityDto">
        SELECT
        city_code,
        city_name
        FROM
        open_city where city_code = #{code}
    </select>
</mapper>