<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idream.commons.lib.mapper.AdminAccountMapper">
    <resultMap id="BaseResultMap" type="com.idream.commons.lib.model.AdminAccount">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="account_name" property="accountName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, account_name, password, status, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from admin_account
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from admin_account
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.idream.commons.lib.model.AdminAccount" useGeneratedKeys="true"
            keyProperty="id">
        insert into admin_account (user_id, account_name, password,
        status, create_time, update_time
        )
        values (#{userId,jdbcType=INTEGER}, #{accountName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.idream.commons.lib.model.AdminAccount" useGeneratedKeys="true"
            keyProperty="id">
        insert into admin_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="accountName != null">
                account_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="accountName != null">
                #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.idream.commons.lib.model.AdminAccount">
        update admin_account
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.idream.commons.lib.model.AdminAccount">
        update admin_account
        set user_id = #{userId,jdbcType=INTEGER},
        account_name = #{accountName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--查询管理端用户列表-->
    <select id="selectAdminUserList" parameterType="com.idream.commons.lib.dto.user.AdminUserListParams"
            resultType="com.idream.commons.lib.dto.user.AdminUserListDto">
        select b.phone, b.id, b.create_time, b.nick_name, a.account_name, d.name from admin_account a
        inner join user_info b
        on a.user_id = b.id
        left join sys_user_role_relation c
        on a.user_id = c.user_id
        left join sys_role d
        on c.role_id = d.id
        where b.user_type = 2
        <if test="accountName != null and accountName !=''">
            and a.account_name = #{accountName}
        </if>
        <if test="roleId != null and roleId !=''">
            and c.role_id = #{roleId}
        </if>
        order by b.create_time desc
    </select>

    <select id="selectByQuerySimpleUser" parameterType="com.idream.commons.lib.dto.auth.QuerySimpleUser"
            resultType="com.idream.commons.lib.dto.auth.AuthUserVo">
        select c.account_name accountName,c.user_id userId,u.nick_name nickName, c.password,u.phone,ur.role_id
        roleId,r.name roleName ,c.create_time createTime from admin_account c inner join user_info u on u.id=c.user_id
        left join sys_user_role_relation ur on ur.user_id=c.user_id
        left join sys_role r on r.id=ur.role_id
        where u.user_type=2
        <if test="accountName!=null and accountName!=''">
            and c.account_name like concat('%','\\', #{accountName},'%')
        </if>
        <if test="roleId !=null">
            and ur.role_id=#{roleId}
        </if>
        order by u.create_time desc
    </select>
</mapper>