<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idream.commons.lib.mapper.UserRegionRelationMapper">
    <resultMap id="BaseResultMap" type="com.idream.commons.lib.model.UserRegionRelation">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="region_id" property="regionId" jdbcType="INTEGER"/>
        <result column="user_type" property="userType" jdbcType="TINYINT"/>
        <result column="from_type" property="fromType" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, region_id, user_type, from_type, create_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_region_relation
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_region_relation
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.idream.commons.lib.model.UserRegionRelation" useGeneratedKeys="true"
            keyProperty="id">
        insert into user_region_relation (user_id, region_id, user_type,
        from_type, create_time)
        values (#{userId,jdbcType=INTEGER}, #{regionId,jdbcType=INTEGER}, #{userType,jdbcType=TINYINT},
        #{fromType,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.idream.commons.lib.model.UserRegionRelation" useGeneratedKeys="true"
            keyProperty="id">
        insert into user_region_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="regionId != null">
                region_id,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="fromType != null">
                from_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="regionId != null">
                #{regionId,jdbcType=INTEGER},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=TINYINT},
            </if>
            <if test="fromType != null">
                #{fromType,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.idream.commons.lib.model.UserRegionRelation">
        update user_region_relation
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="regionId != null">
                region_id = #{regionId,jdbcType=INTEGER},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=TINYINT},
            </if>
            <if test="fromType != null">
                from_type = #{fromType,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.idream.commons.lib.model.UserRegionRelation">
        update user_region_relation
        set user_id = #{userId,jdbcType=INTEGER},
        region_id = #{regionId,jdbcType=INTEGER},
        user_type = #{userType,jdbcType=TINYINT},
        from_type = #{fromType,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--查询用户认证的社区相关信息-->
    <select id="selectRegionByUserId" parameterType="java.lang.Integer"
            resultType="com.idream.commons.lib.dto.marketing.UserRegionPoolInfo">
        select a.region_id,b.longitude,b.latitude
        from
        user_region_relation a
        inner join region_info b
        on a.region_id = b.id
        where a.user_id =#{userId}
    </select>


    <select id="selectRegionInfoListByUserId" resultType="com.idream.commons.lib.model.RegionInfo">
        SELECT b.id,b.region_name FROM user_region_relation a INNER JOIN region_info b ON a.region_id=b.id and b.type=2 WHERE
        a.user_id=#{userId}
    </select>

    <resultMap id="getSuggestAttention" type="com.idream.commons.lib.dto.app.SuggestAttentionDto">
        <id column="userId" property="userId"/>
        <result column="nickName" property="nickName"/>
        <result column="userImage" property="userImage"/>
        <result column="fromWhere" property="fromWhere"/>
        <result column="accid" property="accid"/>
        <result column="attendEachOther" property="attendEachOther"/>
        <collection property="userLabelList" ofType="com.idream.commons.lib.dto.activity.AppUserLabelDto">
            <id column="id" property="id"/>
            <result column="label" property="label"/>
        </collection>
    </resultMap>
    <select id="getSuggestAttentionByUserId" resultMap="getSuggestAttention">
        SELECT
        DISTINCT(b.id) userId ,b.nick_name nickName,b.image userImage,c.achieve_id id,c.achieve_name label,2 AS
        fromWhere,d.acc_id accid,0 attendEachOther
        FROM user_region_relation a
        INNER JOIN user_info b ON a.user_id = b.id AND b.user_type = 1 AND b.user_role &lt;9 AND b.id &gt;2
        LEFT JOIN achievement_user c ON c.user_id = b.id AND c.completed = 1
        LEFT JOIN user_wyim_account d ON d.user_id = b.id
        WHERE a.region_id in (SELECT region_id FROM user_region_relation WHERE user_id = #{userId})
        ORDER BY c.id DESC
    </select>
</mapper>