<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idream.commons.lib.mapper.ActivityMessageLikeRecordMapper">
    <resultMap id="BaseResultMap" type="com.idream.commons.lib.model.ActivityMessageLikeRecord">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="message_id" property="messageId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, message_id, user_id, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from activity_message_like_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from activity_message_like_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.idream.commons.lib.model.ActivityMessageLikeRecord" useGeneratedKeys="true"
            keyProperty="id">
        insert into activity_message_like_record (message_id, user_id, create_time,
        update_time)
        values (#{messageId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.idream.commons.lib.model.ActivityMessageLikeRecord"
            useGeneratedKeys="true" keyProperty="id">
        insert into activity_message_like_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                message_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                #{messageId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.idream.commons.lib.model.ActivityMessageLikeRecord">
        update activity_message_like_record
        <set>
            <if test="messageId != null">
                message_id = #{messageId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.idream.commons.lib.model.ActivityMessageLikeRecord">
        update activity_message_like_record
        set message_id = #{messageId,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="countActivityMessageLikeByUserId" resultType="int" parameterType="int">
        SELECT COUNT(*) FROM activity_message m
        INNER JOIN activity_message_like_record mlr ON mlr.message_id = m.id
        WHERE m.user_id=#{userId}
    </select>

    <delete id="deleteByUserIdAndMessageId">
        delete from activity_message_like_record
        where user_id = #{userId} and message_id = #{messageId}
    </delete>
</mapper>