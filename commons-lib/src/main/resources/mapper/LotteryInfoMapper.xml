<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idream.commons.lib.mapper.LotteryInfoMapper">
    <resultMap id="BaseResultMap" type="com.idream.commons.lib.model.LotteryInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="community_id" property="communityId" jdbcType="INTEGER"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="ad_code" property="adCode" jdbcType="VARCHAR"/>
        <result column="activity_id" property="activityId" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="instructions" property="instructions" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, community_id, city, ad_code, activity_id, start_time, end_time, status, instructions,
        create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from lottery_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from lottery_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.idream.commons.lib.model.LotteryInfo" useGeneratedKeys="true"
            keyProperty="id">
        insert into lottery_info (community_id, city, ad_code,
        activity_id, start_time, end_time,
        status, instructions, create_time,
        update_time)
        values (#{communityId,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{adCode,jdbcType=VARCHAR},
        #{activityId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
        #{status,jdbcType=TINYINT}, #{instructions,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.idream.commons.lib.model.LotteryInfo" useGeneratedKeys="true"
            keyProperty="id">
        insert into lottery_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="communityId != null">
                community_id,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="adCode != null">
                ad_code,
            </if>
            <if test="activityId != null">
                activity_id,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="instructions != null">
                instructions,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="communityId != null">
                #{communityId,jdbcType=INTEGER},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="adCode != null">
                #{adCode,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                #{activityId,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="instructions != null">
                #{instructions,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.idream.commons.lib.model.LotteryInfo">
        update lottery_info
        <set>
            <if test="communityId != null">
                community_id = #{communityId,jdbcType=INTEGER},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="adCode != null">
                ad_code = #{adCode,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                activity_id = #{activityId,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="instructions != null">
                instructions = #{instructions,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.idream.commons.lib.model.LotteryInfo">
        update lottery_info
        set community_id = #{communityId,jdbcType=INTEGER},
        city = #{city,jdbcType=VARCHAR},
        ad_code = #{adCode,jdbcType=VARCHAR},
        activity_id = #{activityId,jdbcType=INTEGER},
        start_time = #{startTime,jdbcType=TIMESTAMP},
        end_time = #{endTime,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=TINYINT},
        instructions = #{instructions,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectLotteryPoolList" resultType="com.idream.commons.lib.dto.marketing.LotteryInfoDto"
            parameterType="com.idream.commons.lib.dto.marketing.LotterySearchParams">
        select a.* from (
        select
        a.id, a.community_id, a.city as cityId, a.ad_code, a.activity_id, a.start_time, a.end_time,a.instructions,
        (CASE WHEN a.start_time &gt; date_format(NOW(),'%Y-%m-%d 00:00:00') THEN 2 WHEN a.end_time &lt;
        date_format(NOW(),'%Y-%m-%d 00:00:00') THEN 3 ELSE
        CASE
        WHEN g.total-f.endNum = 0 and a.end_time &lt;= date_format(NOW(),'%Y-%m-%d 00:00:00') THEN
        3
        when g.total-e.startNum = 0 and a.start_time &gt;= date_format(NOW(),'%Y-%m-%d 00:00:00') THEN
        2
        ELSE
        1
        END END) as lotteryStatus, a.create_time,
        a.update_time,b.type,c.district as adName,c.city ,c.region_name as communityName,d.title as activityName
        from lottery_info a
        left join (select type ,lottery_id from lottery_detail group by lottery_id) b
        on a.id = b.lottery_id
        LEFT JOIN region_info c ON c.id=a.community_id
        left join activity_info d
        on d.id = a.activity_id
        left join (SELECT
        count(*) as startNum,
        a.lottery_id
        FROM
        lottery_detail a
        WHERE a.start_time &gt; Time(now())
        GROUP BY
        a.lottery_id ) e on e.lottery_id = a.id
        LEFT JOIN (
        SELECT
        count(*) AS endNum,
        a.lottery_id
        FROM
        lottery_detail a
        WHERE
        a.end_time &lt; Time(now())
        GROUP BY
        a.lottery_id
        ) f on f.lottery_id = a.id
        left join ( SELECT
        count(*) total,
        a.lottery_id
        FROM
        lottery_detail a
        GROUP BY
        a.lottery_id) g on g.lottery_id = a.id
        <where>
            <if test="banded != null">
                <if test="banded == true">
                    a.activity_id is not null
                </if>
                <if test="banded == false">
                    a.activity_id is null
                </if>
            </if>
            <if test="communityId != null">
                and a.community_id = #{communityId,jdbcType=INTEGER}
            </if>
            <if test="communityName != null and communityName != ''">
                and c.region_name like concat('%',#{communityName},'%')
            </if>
            <if test="adCode != null and adCode != ''">
                and a.ad_code = #{adCode,jdbcType=VARCHAR}
            </if>
            <if test="cityId != null and cityId != ''">
                and a.city = #{cityId,jdbcType=VARCHAR}
            </if>
        </where>
        order by lotteryStatus ASC,a.id desc ) a
        <where>
            <if test="status != null and status != 4">
                a.lotteryStatus = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="selectLotteryListByUser" resultType="com.idream.commons.lib.dto.marketing.LotteryInfoDto"
            parameterType="com.idream.commons.lib.dto.marketing.LotterySearchParams">
        select a.* from (
        select
        a.id, a.community_id, a.city as cityId, a.ad_code, a.activity_id, a.start_time, a.end_time,a.instructions,
        (CASE WHEN a.start_time &gt; date_format(NOW(),'%Y-%m-%d 00:00:00') THEN 2 WHEN a.end_time &lt;
        date_format(NOW(),'%Y-%m-%d 00:00:00') THEN 3 ELSE
        CASE
        WHEN g.total-f.endNum = 0 and a.end_time &lt;= date_format(NOW(),'%Y-%m-%d 00:00:00') THEN
        3
        when g.total-e.startNum = 0 and a.start_time &gt;= date_format(NOW(),'%Y-%m-%d 00:00:00') THEN
        2
        ELSE
        1
        END END) as lotteryStatus,
        a.create_time,
        a.update_time,b.type,
        c.district AS adName,
        c.city,
        c.region_name AS communityName,
        d.title as activityName
        from lottery_info a
        left join (select type ,lottery_id from lottery_detail group by lottery_id) b
        on a.id = b.lottery_id
        LEFT JOIN region_info c ON c.id = a.community_id
        LEFT JOIN activity_info d ON d.id = a.activity_id
        left join (SELECT
        count(*) as startNum,
        a.lottery_id
        FROM
        lottery_detail a
        WHERE a.start_time &gt; Time(now())
        GROUP BY
        a.lottery_id ) e on e.lottery_id = a.id
        LEFT JOIN (
        SELECT
        count(*) AS endNum,
        a.lottery_id
        FROM
        lottery_detail a
        WHERE
        a.end_time &lt; Time(now())
        GROUP BY
        a.lottery_id
        ) f on f.lottery_id = a.id
        left join ( SELECT
        count(*) total,
        a.lottery_id
        FROM
        lottery_detail a
        GROUP BY
        a.lottery_id) g on g.lottery_id = a.id
        WHERE
        c.id IN (
        SELECT
        region_id
        FROM
        region_group_relation
        WHERE
        group_id IN (
        SELECT
        book_id
        FROM
        user_manager
        WHERE
        user_id = #{userId}
        )
        )
        <if test="banded != null">
            <if test="banded == true">
                and a.activity_id is not null
            </if>
            <if test="banded == false">
                and a.activity_id is null
            </if>
        </if>
        <if test="communityId != null">
            and a.community_id = #{communityId,jdbcType=INTEGER}
        </if>
        <if test="communityName != null and communityName != ''">
            and c.region_name like concat('%',#{communityName},'%')
        </if>
        <if test="adCode != null and adCode != ''">
            and a.district_code = #{adCode,jdbcType=VARCHAR}
        </if>
        <if test="cityId != null and cityId != ''">
            and a.city = #{cityId,jdbcType=VARCHAR}
        </if>
        order by lotteryStatus ASC,a.id desc ) a
        <where>
            <if test="status != null and status != 4">
                a.lotteryStatus = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="selectActivityList" resultType="com.idream.commons.lib.dto.marketing.ActivityInfoDto"
            parameterType="java.lang.Integer">
        SELECT
        a.id,
        a.title,
        a.subtitle,
        a.image,
        a.content,
        a.`status`,
        a.start_time,
        a.end_time,
        a.user_id,
        a.type_id,
        a.city_code,
        a.city,
        a.count,
        a.type,
        a.create_time,
        a.update_time
        FROM
        activity_info a
        INNER JOIN activity_group_relation b ON a.id = b.activity_id and group_type = 40
        WHERE a.`status` =4
        and b.group_id = #{communityId} and a.end_time &gt; date_format(NOW(),'%Y-%m-%d 00:00:00')
    </select>
    <!-- 现场开奖列表信息查询 -->
    <select id="selectLotteryInfoList" parameterType="java.lang.String"
            resultType="com.idream.commons.lib.dto.activity.LotteryInfoResponseDto">
        select
        a.id,
        a.community_id communityId,
        a.city,
        a.ad_code adCode,
        a.activity_id activityId,
        a.start_time startTime,
        a.end_time endTime,
        a.status,
        a.create_time createTime,
        a.update_time updateTime,
        b.longitude,
        b.latitude,
        b.name communityName
        from lottery_info a
        LEFT JOIN region_info b ON b.id=a.community_id
        where b.city = #{city}
        order by a.create_time desc
    </select>
    <select id="selectLotteryById" resultType="com.idream.commons.lib.dto.marketing.LotteryInfoDto"
            parameterType="java.lang.Integer">
        select
        a.id, a.community_id, a.city, a.ad_code, a.activity_id, a.start_time, a.end_time, a.status,
        a.create_time,a.instructions,
        a.update_time,b.type,c.district as adName,c.region_name as communityName,d.title as activityName
        from lottery_info a
        left join (select type ,lottery_id from lottery_detail group by lottery_id) b
        on a.id = b.lottery_id
        LEFT JOIN region_info c ON c.id=a.community_id
        left join activity_info d
        on d.id = a.activity_id
        where
        a.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectLotteryListByNear" resultType="com.idream.commons.lib.dto.marketing.WeChatLotteryInfoDto"
            parameterType="java.math.BigDecimal">
        select
        a.id as community_id,b.id as lotteryId, b.city, b.ad_code, b.activity_id, b.start_time, b.end_time,d.start_time
        as activityStartTime,d.end_time as activityEndTime,
        c.type,a.district as adName,a.region_name as communityName,d.title as activityName,
        (
        3959 * ACOS(
        COS(RADIANS(#{latitude})) * cos(radians(a.latitude)) * cos(
        RADIANS(a.longitude) - RADIANS(#{longitude})
        ) + sin(radians(#{latitude})) * sin(radians(a.latitude))
        )
        ) * 1609.344 AS distance
        from region_info a
        left join lottery_info b
        on a.id = b.community_id and (select date_sub(date_add(b.start_time, interval (SELECT start_time FROM
        lottery_detail WHERE lottery_id =b.id ORDER BY start_time ASC LIMIT 1 ) hour_second),interval 3 DAY)) &lt;=
        now() and b.end_time &gt;= date_format(NOW(),'%Y-%m-%d 00:00:00')
        left join (select type ,lottery_id from lottery_detail group by lottery_id) c
        on b.id = c.lottery_id
        left join activity_info d
        on d.id = b.activity_id
        where a.type =2
        <if test="cityCode!=null and cityCode!=''">
            and a.city_code = #{cityCode}
        </if>
        order by distance asc ;
    </select>

    <!--查询开奖活动的详细信息映射-->
    <resultMap id="SceneOpenAwardMap" type="com.idream.commons.lib.dto.marketing.SceneOpenAwardInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="community_id" property="communityId" jdbcType="INTEGER"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="ad_code" property="adCode" jdbcType="VARCHAR"/>
        <result column="activity_id" property="activityId" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="longitude" property="longitude" jdbcType="DECIMAL"/>
        <result column="latitude" property="latitude" jdbcType="DECIMAL"/>
        <collection property="lotteryDetails" ofType="com.idream.commons.lib.model.LotteryDetail">
            <id column="lotteryDetailId" property="id" jdbcType="INTEGER"/>
            <result column="lottery_id" property="lotteryId" jdbcType="INTEGER"/>
            <result column="type" property="type" jdbcType="TINYINT"/>
            <result column="speak_secret" property="speakSecret" jdbcType="VARCHAR"/>
            <result column="detailStartTime" property="startTime" jdbcType="TIMESTAMP"/>
            <result column="detailEndTime" property="endTime" jdbcType="TIMESTAMP"/>
            <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
            <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
            <result column="lottery_count" property="lotteryCount" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <!--查根据开奖活动Id询开奖活动的详细信息,如果开奖绑定活动,优先取活动的经纬度-->
    <select id="selectSceneOpenAwardInfo" resultMap="SceneOpenAwardMap">
        select a.id, a.community_id, a.city, a.ad_code, a.activity_id, a.start_time, a.end_time, a.status,
        b.id as lotteryDetailId, b.lottery_id, b.type, b.speak_secret, b.start_time as detailStartTime,
        b.end_time as detailEndTime,b.lottery_count,
        ifnull(d.longitude,c.longitude) longitude ,ifnull(d.latitude,c.latitude) latitude
        from lottery_info a
        left join lottery_detail b
        on a.id = b.lottery_id
        left join region_info c
        on a.community_id = c.id
        left join activity_info d
        on a.activity_id = d.id
        where a.id = #{lotteryId}
        <if test=" date != null">
            and Date(#{date}) between Date(b.start_date) and Date(b.end_date)
            and Time(#{date}) between Time(b.start_time) and Time(b.end_time)
        </if>
    </select>

    <!-- 有奖活动(现场开奖) app端 -->
    <select id="selectLotteryList" resultType="com.idream.commons.lib.dto.app.LotteryListResponseDto">
        SELECT
        a.id lotteryId,
        a.start_time startTime,
        a.end_time endTime,
        a.community_id communityId,
        a.activity_id activityId,
        b.name communityName,
        b.longitude,
        b.latitude
        FROM lottery_info a
        LEFT JOIN region_group_info b ON b.id=a.community_id AND b.category = 1
        WHERE a.end_time &gt;= date_format(NOW(),'%Y-%m-%d 00:00:00') AND a.community_id = #{communityId}
        order by a.start_time,a.end_time
    </select>

    <select id="getLotteryInfoList" resultType="com.idream.commons.lib.dto.app.LotteryListResponseDto">
        select
        a.id lotteryId,
        a.start_time startTime,
        a.end_time endTime,
        a.community_id communityId,
        a.activity_id activityId,
        b.region_name communityName,
        b.longitude,
        b.latitude
        from lottery_info a
        LEFT JOIN region_info b ON b.id=a.community_id
        where a.community_id=#{communityId}
    </select>
    <select id="getLotteryList" resultType="com.idream.commons.lib.dto.marketing.LotteryWinRecordDto"
            parameterType="com.idream.commons.lib.dto.marketing.LotteryWinRecordSearchParams">
        SELECT
        b.award_id as pool_id,
        b.id as coupon_id,
        b.coupon_code,
        b.create_time as lottery_time,
        b.award_name,
        b.status,
        b.user_id,
        c.lottery_id,
        e.phone,
        d.create_time as exchange_time,
        e.real_name as name
        FROM
        coupon_info b
        left join lottery_pool c on c.id = b.award_id
        left join exchange_record d on d.coupon_id = b.id
        left join user_info e on e.id = b.user_id
        where b.from_type =3 and b.status !=3
        <if test="lotteryId != null">
            and c.lottery_id = #{lotteryId,jdbcType=INTEGER}
        </if>
        <if test="phone != null and phone!=''">
            and e.phone like concat ('%' ,#{phone,jdbcType=VARCHAR},'%')
        </if>
        <if test="status != null">
            and b.status = #{status,jdbcType=INTEGER}
        </if>
        <if test="couponCode != null and couponCode!=''">
            and b.coupon_code like concat ('%',#{couponCode,jdbcType=VARCHAR},'%')
        </if>
        order by b.status asc,b.id desc
    </select>
    <select id="selectActivityInfoByLotteryId" resultType="com.idream.commons.lib.dto.marketing.LotteryActivityInfoDto"
            parameterType="java.lang.Integer">
        select
        a.id as lotteryId, a.community_id , a.activity_id, a.start_time, a.end_time,c.start_time as
        activityStartTime,c.end_time as activityEndTime,
        b.region_name as communityName,c.title as activityName,c.content as activityContent,
        a.instructions as lotteryInstructions
        from lottery_info a
        left join region_info b
        on b.id = a.community_id
        left join activity_info c
        on c.id = a.activity_id
        where a.id = #{lotteryId}

    </select>
    <select id="selectLotteryInfoListByCommunity" resultType="com.idream.commons.lib.dto.region.UnityLotteryDto">
        select
        a.id as lotteryId, a.community_id ,b.region_name as communityName,c.title as content
        from lottery_info a
        left join region_info b
        on b.id = a.community_id
        left join activity_info c
        on c.id = a.activity_id
        where a.community_id = #{communityId} and a.end_time &gt;= date_format(NOW(),'%Y-%m-%d 00:00:00') and
        a.start_time &lt;= date_format(NOW(),'%Y-%m-%d 00:00:00')
    </select>
    <update id="updateByEntity" parameterType="com.idream.commons.lib.model.LotteryInfo">
        update lottery_info
        <set>
            <if test="communityId != null">
                community_id = #{communityId,jdbcType=INTEGER},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="adCode != null">
                ad_code = #{adCode,jdbcType=VARCHAR},
            </if>
            activity_id = #{activityId,jdbcType=INTEGER},
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="instructions != null">
                instructions = #{instructions,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>